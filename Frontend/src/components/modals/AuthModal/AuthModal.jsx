import { useState } from 'react';
import './AuthModal.css';
import {authApi} from '../../../api/authApi';

const AuthModal = ({ onClose, onLogin, isDarkTheme }) => {
  const [isLogin, setIsLogin] = useState(true);
  const [formData, setFormData] = useState({
    username: '',
    email: '',
    password: '',
    confirmPassword: ''
  });

  const handleOverlayClick = (e) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (isLogin) {
      const userData = {
        username: formData.username,
        email: formData.email || `${formData.username}@example.com`,
        plan: 'Basic',
        joinDate: new Date().toLocaleDateString()
      };
      onLogin(userData);
    } else {
      if (formData.password !== formData.confirmPassword) {
        alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
        return;
      }
      const userData = {
        username: formData.username,
        email: formData.email,
        plan: 'Basic',
        joinDate: new Date().toLocaleDateString()
      };
      onLogin(userData);
      authApi.register({
        email: formData.email,
        username: formData.username,
        password: formData.password,
        passwordConfirm: formData.confirmPassword
    })
    };
  };

  const switchMode = () => {
    setIsLogin(!isLogin);
    setFormData({
      username: '',
      email: '',
      password: '',
      confirmPassword: ''
    });
  };

  return (
    <div className="modal-overlay" onClick={handleOverlayClick}>
      <div className="auth-modal">
        <div className="auth-header">
          <h2 className="auth-title">{isLogin ? '–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}</h2>
          <button className="close-button" onClick={onClose}>√ó</button>
        </div>
        
        <form className="auth-form" onSubmit={handleSubmit}>
          <div className="form-group">
            <label className="form-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
            <input 
              type="text" 
              name="username"
              className="form-input"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              value={formData.username}
              onChange={handleInputChange}
              required
            />
          </div>

          {!isLogin && (
            <div className="form-group">
              <label className="form-label">Email</label>
              <input 
                type="email" 
                name="email"
                className="form-input"
                placeholder="–í–≤–µ–¥–∏—Ç–µ email"
                value={formData.email}
                onChange={handleInputChange}
                required
              />
            </div>
          )}
          
          <div className="form-group">
            <label className="form-label">–ü–∞—Ä–æ–ª—å</label>
            <input 
              type="password" 
              name="password"
              className="form-input"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              value={formData.password}
              onChange={handleInputChange}
              required
            />
          </div>

          {!isLogin && (
            <div className="form-group">
              <label className="form-label">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
              <input 
                type="password" 
                name="confirmPassword"
                className="form-input"
                placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                value={formData.confirmPassword}
                onChange={handleInputChange}
                required
              />
            </div>
          )}

          <button type="submit" className="auth-submit-button">
            {isLogin ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
          </button>
        </form>

        <div className="auth-footer">
          <p className="auth-switch-text">
            {isLogin ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?'}
            <button className="auth-switch-button" onClick={switchMode}>
              {isLogin ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–í–æ–π—Ç–∏'}
            </button>
          </p>

          <div className="auth-features">
            <h4>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–∞:</h4>
            <ul>
              <li>üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</li>
              <li>‚ù§Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ</li>
              <li>üé¨ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
              <li>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—Å</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AuthModal;